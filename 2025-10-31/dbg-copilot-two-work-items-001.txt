for our project, I would like to do the below work items in the next:
1. remove agent mode from the dbgcopilot and start a new sub project named as dbgagent(later can consider to separate to a new standalone project). The dbgagent is standalone program, from the command line, you can sepcify which deugger, llm provider and model, llm provider key(can also read from the environment), the progream or the core file you want to debug, what you want to check to the debugging target(such as why crash,why hang,why leak), then the dbgagent will auto plan the tasks and commands need to run in order to give what you want, it will auo executed and auto analyze the target until it meet your requirement or until reached the max iterations. It can log the detailed plan and executions into the session log if turned on logging through command line or environment variable, it will generate the final report of the auto debugging including what he planned, when the executed, what his finding and what his recommendation to fix if root cause identified or recommendnation to move forward next in case any failure or root cause is not identified before the max inerations reached.
2.  Add browser front UI  interface to dbgcopilot which UI is similr as VSCODE by default has 3 vertical frames, - explorer frame which can set debugger,llm provider and key, also can explore the local fodlers and files to select the file to debug, - middle debugger frame, show gdb or lldb prompt, execute the command and display the output, - chat frame, show llm chat box and llm chat history, also can select models of the selected llm provider.
Let us start from the 1st work item 1st and for the 2nd work item, before you start to do the implementaion, pls let me know how would you plan to do and I will review and then discuss with you how to move forward. 
