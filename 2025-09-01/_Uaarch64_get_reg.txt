oldzhu@oldzhu-box-999:~/buildroot$ output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-readelf -s output/target/root/dotnethello/libmscordaccore.so |grep aarch64
     7: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND _Uaarch64_get_reg
    14: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND _Uaarch64_create_addr_space
    66: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND _Uaarch64_step
    78: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND _Uaarch64_destroy_addr_space
    93: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND _Uaarch64_init_remote
   155: 0000000000000000     0 NOTYPE  GLOBAL DEFAULT   UND _Uaarch64_get_proc_info_in_range

but no _Uaarch64_get_reg compiled in official one 
oldzhu@oldzhu-box-999:~/buildroot$ output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-readelf -s ~/libmscordaccore.so |grep aarch64

oldzhu@oldzhu-box-999:~/buildroot$ output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-readelf -d output/build/dotnetruntime-origin_risc-v/.dotnet/shared/Microsoft.NETCore.App/10.0.0-preview.7.25372.107/libmscordaccore.so
Dynamic section at offset 0x23fc18 contains 36 entries:
  Tag                Type           Name/Value
  0x0000000000000001 (NEEDED)       Shared library: [libgcc_s.so.1]
  0x0000000000000001 (NEEDED)       Shared library: [libpthread.so.0]
  0x0000000000000001 (NEEDED)       Shared library: [librt.so.1]
  0x0000000000000001 (NEEDED)       Shared library: [libdl.so.2]
  0x0000000000000001 (NEEDED)       Shared library: [libstdc++.so.6]
  0x0000000000000001 (NEEDED)       Shared library: [libm.so.6]
  0x0000000000000001 (NEEDED)       Shared library: [libc.so.6]
  0x0000000000000001 (NEEDED)       Shared library: [ld-linux-x86-64.so.2]
  0x000000000000000e (SONAME)       Library soname: [libmscordaccore.so]
  0x000000000000001e (FLAGS)        SYMBOLIC BIND_NOW
  0x000000006ffffffb (FLAGS_1)      NOW
  0x0000000000000007 (RELA)         0x4268
  0x0000000000000008 (RELASZ)       134520 (bytes)
  0x0000000000000009 (RELAENT)      24 (bytes)
  0x000000006ffffff9 (RELACOUNT)    5473
  0x0000000000000017 (JMPREL)       0x24fe0
  0x0000000000000002 (PLTRELSZ)     5088 (bytes)
  0x0000000000000003 (PLTGOT)       0x241f38
  0x0000000000000014 (PLTREL)       RELA
  0x0000000000000006 (SYMTAB)       0x2d0
  0x000000000000000b (SYMENT)       24 (bytes)
  0x0000000000000005 (STRTAB)       0x2bb4
  0x000000000000000a (STRSZ)        5808 (bytes)
  0x000000006ffffef5 (GNU_HASH)     0x2838
  0x0000000000000019 (INIT_ARRAY)   0x236680
  0x000000000000001b (INIT_ARRAYSZ) 128 (bytes)
  0x000000000000001a (FINI_ARRAY)   0x236670
  0x000000000000001c (FINI_ARRAYSZ) 16 (bytes)
  0x000000000000000c (INIT)         0x2348f0
  0x000000000000000d (FINI)         0x234908
  0x000000006ffffff0 (VERSYM)       0x23a0
  0x000000006ffffffc (VERDEF)       0x265c
  0x000000006ffffffd (VERDEFNUM)    2
  0x000000006ffffffe (VERNEED)      0x2694
  0x000000006fffffff (VERNEEDNUM)   7
  0x0000000000000000 (NULL)         0x0

oldzhu@oldzhu-box-999:~/tmp$ dotnet-symbol --timeout 60 --symbols ./libmscordaccore.so
...
oldzhu@oldzhu-box-999:~/tmp$ ~/buildroot/output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-readelf -s ./libmscordaccore.so.dbg | grep get_reg
/home/oldzhu/buildroot/output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-readelf: warning: './libmscordaccore.so.dbg': no valid dynamic table was found
 17919: 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS Lget_reg.c
 17931: 000000000022aedc    32 FUNC    LOCAL  HIDDEN     14 _ULaarch64_get_reg
 18778: 0000000000000000     0 FILE    LOCAL  DEFAULT   ABS Gget_reg.c
 18790: 0000000000239624    32 FUNC    LOCAL  HIDDEN     14 _Uaarch64_get_reg

it is confirmed from elf dbg file for MS built libmscordaccore, both _ULaarch64_get_reg and _Uaarch64_get_reg should be compiled locally into itself

So the key question is why in my building _Uaarch64_get_reg is not compiled as LOCAL. 

oldzhu@oldzhu-box-999:~/tmp$ ~/buildroot/output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-addr2line -e .
/libmscordaccore.so.dbg 0000000000239624
/__w/1/s/src/runtime/src/native/external/libunwind/src/mi/Gget_reg.c:34
oldzhu@oldzhu-box-999:~/tmp$ ~/buildroot/output/build/host-lldb-origin_main/llvm/buildroot-build/bin/llvm-addr2line -e ./libmscordaccore.so.dbg 000000000022aedc
/__w/1/s/src/runtime/src/native/external/libunwind/src/mi/Gget_reg.c:34

it is coming from the same Gget_reg.c just compiled with the different condition to create the different prefix _U abd _UL
need to figure out why in my buildroot building the _U version of get_reg was not compiled.

refer to external unknown unw_get_reg is in runtime/src/coreclr/pal/src/exception
/remote-unwind.cpp

/runtime/src/native/external/libunwind/include/libunwind.h.in
/runtime/src/native/external/libunwind/include/libunwind-aarch64.h
/runtime/src/native/external/libunwind/include/libunwind-common.h.in
...
#define UNW_PASTE2(x,y)	x##y
#define UNW_PASTE(x,y)	UNW_PASTE2(x,y)
#define UNW_OBJ(fn)	UNW_PASTE(UNW_PREFIX, fn)
...
#ifdef UNW_LOCAL_ONLY
# define UNW_PREFIX	UNW_PASTE(UNW_PASTE(_UL,UNW_TARGET),_)
#else /* !UNW_LOCAL_ONLY */
# define UNW_PREFIX	UNW_PASTE(UNW_PASTE(_U,UNW_TARGET),_)
#endif /* !UNW_LOCAL_ONLY */
...
#define unw_get_reg			UNW_OBJ(get_reg)
...
extern int unw_get_reg (unw_cursor_t *, int, unw_word_t *);
...

unw_get_reg is defined in
/runtime/src/native/external/libunwind/src/mi/Gget_reg.c

