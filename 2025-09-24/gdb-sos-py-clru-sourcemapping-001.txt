All set. I’ve backed up the three source files you listed, added the backup and logs to .gitignore, and reverted those source files to the last commit while keeping your test/log changes.

Here’s what I did:

Backed up modified source files to src/backup-2025-09-24/ (mirrors subpaths):
gdbbridge.cpp
services.py
sos.py
Updated .gitignore:
Added src/backup-2025-09-24/
Added src/tests/gdb/logs/
Reverted only these three files to HEAD:
gdbbridge.cpp
services.py
sos.py
Verification (git status):

Modified files now are only:
.gitignore
src/tests/gdb/logs/summary
t_cmd_clrstack.log
t_cmd_dso.log
t_cmd_soshelp.log
test.sh
Next steps

When you’re ready to revisit source mapping, we can confirm whether the LLDB plugin’s clrstack/clru path actually calls ILLDBServices::GetLineByOffset, and adjust our GDB plugin to mirror the same call sites. If helpful, I can prep a minimal tracing harness on the LLDB side to confirm the call path.
========

let us temporary hold on source mapping before we figure out how lldb plugin clru source mapping works. Let us begin to work on to remove requirement which is our py files and libsosgdbbridge.so have to be in the same folder as libsos.so and SOS debugger extenstion. Now what I want to is they can be in different folder. I mean our py files and libsosgdbbridge.so can be in one folder such as gdbsos or in our repo artifacts/bin/linux.x64.[config] and libsos.so and SOS extensions can be inother folder. Now the question is how to detect the folder for libsos.sos and SOS extensions
