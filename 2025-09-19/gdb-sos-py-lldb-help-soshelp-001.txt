some commands are not in the soshelp list such as clru, even bpmd. I also observed something interesting in lldb plugin, for example, after plugin load libsosplugin.so before press r to start the program,  if u run soshelp,u only could see a subset of the soshelp as the below

crashinfo                                 Displays the crash details that created the dump.
d, readmemory <address>                   Dumps memory contents.
da <address>                              Dumps memory as zero-terminated byte strings.
db <address>                              Dumps memory as bytes.
dc <address>                              Dumps memory as chars.
dd <address>                              Dumps memory as dwords (uint).
dp <address>                              Dumps memory as pointers.
dq <address>                              Dumps memory as qwords (ulong).
du <address>                              Dumps memory as zero-terminated char strings.
dw <address>                              Dumps memory as words (ushort).
help, soshelp <command>                   Displays help for a command.
loadsymbols <url>                         Loads symbols for all modules.
logclose <path>                           Disables console file logging.
logging <path>                            Enables/disables internal diagnostic logging.
logopen <path>                            Enables console file logging.
modules, lm                               Displays the native modules in the process.
registers, r                              Displays the thread's registers.
runtimes, setruntime <id>                 Lists the runtimes in the target or changes the default runtime.
setclrpath <path>                         Sets the path to load coreclr DAC/DBI files.
setsymbolserver, SetSymbolServer <url>    Enables and sets symbol server support for symbols and module download.
sosflush                                  Resets the internal cached state.
sosstatus                                 Displays internal status.
threads, setthread <thread>               Lists the threads in the target or sets the current thread.

if u run soshelp after the target started, u could see more managed debugging command as the below:
analyzeoom, AnalyzeOOM                                   Displays the info of the last OOM that occurred on an allocation request to the GC heap.
assemblies, clrmodules                                   Lists the managed assemblies in the process.
clrstack <arguments>                                     Provides a stack trace of managed code only.
clrthreads <arguments>                                   Lists the managed threads running.
crashinfo                                                Displays the crash details that created the dump.
d, readmemory <address>                                  Dumps memory contents.
da <address>                                             Dumps memory as zero-terminated byte strings.
db <address>                                             Dumps memory as bytes.
dbgout <arguments>                                       Enables/disables (-off) internal SOS logging.
dc <address>                                             Dumps memory as chars.
dd <address>                                             Dumps memory as dwords (uint).
dp <address>                                             Dumps memory as pointers.
dq <address>                                             Dumps memory as qwords (ulong).
du <address>                                             Dumps memory as zero-terminated char strings.
dumpalc <arguments>                                      Displays details about a collectible AssemblyLoadContext into which the specified object is loaded.
dumparray <arguments>                                    Displays details about a managed array.
dumpassembly <arguments>                                 Displays details about an assembly.
dumpasync, DumpAsync                                     Displays information about async "stacks" on the garbage-collected heap.
dumpclass <arguments>                                    Displays information about a EE class structure at the specified address.
dumpconcurrentdictionary, dcd <address>                  Displays concurrent dictionary content.
dumpconcurrentqueue, dcq <address>                       Displays concurrent queue content.
dumpdelegate <arguments>                                 Displays information about a delegate.
dumpdomain <arguments>                                   Displays the Microsoft intermediate language (MSIL) that's associated with a managed method.
dumpexceptions                                           Displays a list of all managed exceptions.
dumpgcdata <arguments>                                   Displays information about the GC data.
dumpgen, dg <generation>                                 Displays heap content for the specified generation.
dumpheap, DumpHeap <memoryrange>                         Displays a list of all managed objects.
dumphttp, DumpHttp                                       Displays information about HTTP requests.
dumpil <arguments>                                       Displays the Microsoft intermediate language (MSIL) that is associated with a managed method.
dumplog <arguments>                                      Writes the contents of an in-memory stress log to the specified file.
dumpmd <arguments>                                       Displays information about a MethodDesc structure at the specified address.
dumpmodule <arguments>                                   Displays information about a EE module structure at the specified address.
dumpmt <arguments>                                       Displays information about a method table at the specified address.
dumpobj, do <arguments>                                  Displays info about an object at the specified address.
dumpobjgcrefs <object>                                   A helper command to implement !dumpobj -refs
dumprequests, DumpRequests                               Displays all currently active incoming HTTP requests.
dumpruntimetypes, DumpRuntimeTypes                       Finds all System.RuntimeType objects in the GC heap and prints the type name and MethodTable they refer to.
dumpsig <arguments>                                      Dumps the signature of a method or field specified by <sigaddr> <moduleaddr>.
dumpsigelem <arguments>                                  Dumps a single element of a signature object.
dumpstackobjects, dso, DumpStackObjects <stackbounds>    Displays all managed objects found within the bounds of the current stack.
dumpvc <arguments>                                       Displays info about the fields of a value class.
dw <address>                                             Dumps memory as words (ushort).
eeheap, EEHeap <memoryrange>                             Displays information about native memory that CLR has allocated.
eeversion <arguments>                                    Displays information about the runtime version.
ehinfo <arguments>                                       Displays the exception handling blocks in a JIT-ed method.
enummem <arguments>                                      ICLRDataEnumMemoryRegions.EnumMemoryRegions test command.
ephrefs                                                  Finds older generation objects which reference objects in the ephemeral segment.
ephtoloh                                                 Finds ephemeral objects which reference the large object heap.
finalizequeue, fq, FinalizeQueue                         Displays all objects registered for finalization.
findappdomain <arguments>                                Attempts to resolve the AppDomain of a GC object.
gchandles <arguments>                                    Provides statistics about GCHandles in the process.
gcheapstat, GCHeapStat                                   Displays various GC heap stats.
gcinfo <arguments>                                       Displays JIT GC encoding for a method.
gcroot, GCRoot <target>                                  Displays info about references (or roots) to an object at the specified address.
gcwhere, GCWhere <address>                               Displays the location in the GC heap of the specified address.
help, soshelp <command>                                  Displays help for a command.
histclear <arguments>                                    Releases any resources used by the family of Hist commands.
histinit <arguments>                                     Initializes the SOS structures from the stress log saved in the debuggee.
histobj <arguments>                                      Examines all stress log relocation records and displays the chain of garbage collection relocations that may have led to  the address passed in as an argument.
histobjfind <arguments>                                  Displays all the log entries that reference an object at the specified address.
histroot <arguments>                                     Displays information related to both promotions and relocations of the specified root.
histstats <arguments>                                    Displays stress log stats.
ip2md <arguments>                                        Displays the MethodDesc structure at the specified address in code that has been JIT-compiled.
listnearobj, lno, ListNearObj <address>                  Displays the object preceding and succeeding the specified address.
loadsymbols <url>                                        Loads symbols for all modules.
logclose <path>                                          Disables console file logging.
logging <path>                                           Enables/disables internal diagnostic logging.
logopen <path>                                           Enables console file logging.
modules, lm                                              Displays the native modules in the process.
name2ee <arguments>                                      Displays the MethodTable structure and EEClass structure for the specified type or method in the specified module.
notreachableinrange <start> <end>                        A helper command for !finalizerqueue
objsize, ObjSize <objectaddress>                         Lists the sizes of the all the objects found on managed threads.
parallelstacks, pstacks                                  Displays the merged threads stack similarly to the Visual Studio 'Parallel Stacks' panel.
pathto, PathTo <source> <target>                         Displays the GC path from <root> to <target>.
printexception, pe <arguments>                           Displays and formats fields of any object derived from the Exception class at the specified address.
registers, r                                             Displays the thread's registers.
runtimes, setruntime <id>                                Lists the runtimes in the target or changes the default runtime.
setclrpath <path>                                        Sets the path to load coreclr DAC/DBI files.
setsymbolserver, SetSymbolServer <url>                   Enables and sets symbol server support for symbols and module download.
SimulateGCHeapCorruption <command>                       Writes values to the GC heap in strategic places to simulate heap corruption.
sizestats                                                Size statistics for the GC heap.
sosflush                                                 Resets the internal cached state.
sosstatus                                                Displays internal status.
syncblk <arguments>                                      Displays the SyncBlock holder info.
taskstate, tks <address>                                 Displays a Task state in a human readable format.
threadpool, ThreadPool                                   Displays info about the runtime thread pool.
threadpoolqueue, tpq                                     Displays queued ThreadPool work items.
threads, setthread <thread>                              Lists the threads in the target or sets the current thread.
threadstate <arguments>                                  Pretty prints the meaning of a threads state.
timerinfo, ti                                            Displays information about running timers.
traverseheap, TraverseHeap <filename>                    Writes out heap information to a file in a format understood by the CLR Profiler.
verifyheap, VerifyHeap <memoryrange>                     Searches the managed heap for memory corruption..
verifyobj, VerifyObj <objectaddress>                     Checks the given object for signs of corruption.

But no matter when you run lldb help before or after r, you will always get the same set of the managed commands under current user-defined commands as the below. These user-definied commands sldo contain some commands won't list in soshelp such as clru, bpmd...

  x         -- Read from the memory of the current target process.
Current user-defined commands:
  SimulateGCHeapCorruption -- Writes values to the GC heap in strategic places to simulate heap corruption.
  analyzeoom               -- Provides a stack trace of managed code only.
  assemblies               -- Lists the managed modules in the process.
  bpmd                     -- Creates a breakpoint at the specified managed method in the specified module.
  clrmodules               -- Lists the managed modules in the process.
  clrstack                 -- Provides a stack trace of managed code only.
  clrthreads               -- Lists the managed threads running.
  clru                     -- Displays an annotated disassembly of a managed method.
  comstate                 -- Lists the COM apartment model for each thread.
  crashinfo                -- Displays the Native AOT crash info.
  d                        -- Dumps memory contents.
  da                       -- Dumps memory as zero-terminated byte strings.
  db                       -- Dumps memory as bytes.
  dbgout                   -- Enables/disables (-off) internal SOS logging.
  dc                       -- Dumps memory as chars.
  dcd                      -- Displays concurrent dictionary content.
  dcq                      -- Displays concurrent queue content.
  dd                       -- Dumps memory as dwords (uint).
  dg                       -- Displays heap content for the specified generation.
  dp                       -- Dumps memory as pointers.
  dq                       -- Dumps memory as qwords (ulong).
  dso                      -- Displays all managed objects found within the bounds of the current stack.
  du                       -- Dumps memory as zero-terminated char strings.
  dumpalc                  -- Displays details about a collectible AssemblyLoadContext to which the specified object is loaded.
  dumparray                -- Displays details about a managed array.
  dumpassembly             -- Displays details about an assembly.
  dumpasync                -- Displays information about async "stacks" on the garbage-collected heap.
  dumpccw                  -- Displays information about a COM Callable Wrapper.
  dumpclass                -- Displays information about a EE class structure at the specified address.
  dumpconcurrentdictionary -- Displays concurrent dictionary content.
  dumpconcurrentqueue      -- Displays concurrent queue content.
  dumpdelegate             -- Displays information about a delegate.
  dumpdomain               -- Displays information about the all assemblies within all the AppDomains or the specified one.
  dumpexceptions           -- Displays a list of all managed exceptions.
  dumpgcdata               -- Displays information about the GC data.
  dumpgen                  -- Displays heap content for the specified generation.
  dumpheap                 -- Displays info about the garbage-collected heap and collection statistics about objects.
  dumphttp                 -- Displays information about HTTP requests.
  dumpil                   -- Displays the Microsoft intermediate language (MSIL) that's associated with a managed method.
  dumplog                  -- Writes the contents of an in-memory stress log to the specified file.
  dumpmd                   -- Displays information about a MethodDesc structure at the specified address.
  dumpmodule               -- Displays information about a EE module structure at the specified address.
  dumpmt                   -- Displays information about a method table at the specified address.
  dumpobj                  -- Displays info about an object at the specified address.
  dumpobjgcrefs            -- A helper command to implement !dumpobj -refs
  dumppermissionset        -- Displays a PermissionSet object (debug build only).
  dumprcw                  -- Displays information about a Runtime Callable Wrapper.
  dumprequests             -- Displays all currently active incoming HTTP requests.
  dumpruntimetypes         -- Finds all System.RuntimeType objects in the GC heap and prints the type name and MethodTable
                              they refer too.
  dumpsig                  -- Dumps the signature of a method or field specified by '<sigaddr> <moduleaddr>'.
  dumpsigelem              -- Dumps a single element of a signature object.
  dumpstack                -- Displays a native and managed stack trace.
  dumpstackobjects         -- Displays all managed objects found within the bounds of the current stack.
  dumpvc                   -- Displays info about the fields of a value class.
  dw                       -- Dumps memory as words (ushort).
  eeheap                   -- Displays info about process memory consumed by internal runtime data structures.
  eestack                  -- Runs dumpstack on all threads in the process.
  eeversion                -- Displays information about the runtime and SOS versions.
  ehinfo                   -- Displays the exception handling blocks in a JIT-ed method.
  enummem                  -- ICLRDataEnumMemoryRegions.EnumMemoryRegions test command.
  ephrefs                  -- Finds older generation objects which reference objects in the ephemeral segment.
  ephtoloh                 -- Finds ephemeral objects which reference the large object heap.
  ext                      -- Executes various coreclr debugging commands. Use the syntax 'sos <command - name> <args>'. For
                              more information, see 'soshelp'.
  finalizequeue            -- Displays all objects registered for finalization.
  findappdomain            -- Attempts to resolve the AppDomain of a GC object.
  findpointersin           -- Finds pointers to the GC heap within the given memory regions.
  findroots                -- Finds and displays object roots across GC collections.
  gchandleleaks            -- Helps in tracking down GCHandle leaks.
  gchandles                -- Displays statistics about garbage collector handles in the process.
  gcheapstat               -- Displays statistics about garbage collector.
  gcinfo                   -- Displays info JIT GC encoding for a method.
  gcroot                   -- Displays info about references (or roots) to an object at the specified address.
  gctonative               -- Finds GC objects which point to the given native memory ranges.
  gcwhere                  -- Displays the location in the GC heap of the specified address.
  histclear                -- Releases any resources used by the family of Hist commands.
  histinit                 -- Initializes the SOS structures from the stress log saved in the debuggee.
  histobj                  -- Examines all stress log relocation records and displays the chain of garbage collection
                              relocations that may have led to the address passed in as an argument.
  histobjfind              -- Displays all the log entries that reference an object at the specified address.
  histroot                 -- Displays information related to both promotions and relocations of the specified root.
  histstats                -- Displays stress log stats.
  ip2md                    -- Displays the MethodDesc structure at the specified address in code that has been JIT-compiled.
  listnearobj              -- Displays the object preceding and succeeding the specified address.
  lm                       -- Displays the native modules in the process.
  loadsymbols              -- Loads the .NET Core native module symbols.
  logclose                 -- Disables console file logging.
  logging                  -- Enables/disables internal SOS logging.
  logopen                  -- Enables console file logging.
  maddress                 -- Displays a breakdown of the virtual address space.
  modules                  -- Displays the native modules in the process.
  name2ee                  -- Displays the MethodTable structure and EEClass structure for the specified type or method in the
                              specified module.
  notreachableinrange      -- A helper command for !finalizerqueue
  objsize                  -- Displays the size of the specified object.
  parallelstacks           -- Displays the merged threads stack similarly to the Visual Studio 'Parallel Stacks' panel.
  pathto                   -- Displays the GC path from <root> to <target>.
  pe                       -- Displays and formats fields of any object derived from the Exception class at the specified
                              address.
  printexception           -- Displays and formats fields of any object derived from the Exception class at the specified
                              address.
  pstacks                  -- Displays the merged threads stack similarly to the Visual Studio 'Parallel Stacks' panel.
  readmemory               -- Dumps memory contents.
  registers                -- Displays the thread's registers.
  runtimes                 -- Lists the runtimes in the target or change the default runtime.
  setclrpath               -- Sets the path to load the runtime DAC/DBI files.
  sethostruntime           -- Sets the path to the .NET Core runtime to use to host the managed code that runs as part of SOS
  setsostid                -- Set the current os tid/thread index instead of using the one lldb provides. setsostid <tid>
                              <index>
  setsymbolserver          -- Enables the symbol server support 
  setthread                -- Lists the threads in the target or sets the current thread.
  sizestats                -- Size statistics for the GC heap.
  sos                      -- Executes various coreclr debugging commands. Use the syntax 'sos <command - name> <args>'. For
                              more information, see 'soshelp'.
  sosflush                 -- Resets the internal cached state.
  soshelp                  -- Displays all available commands when no parameter is specified, or displays detailed help
                              information about the specified command: 'soshelp <command>'.
  sosstatus                -- Displays the global SOS status.
  stoponcatch              -- Target process will break the next time a managed exception is caught during execution.
  syncblk                  -- Displays the SyncBlock holder info.
  taskstate                -- Displays a Task state in a human readable format.
  threadpool               -- Displays info about the runtime thread pool.
  threadpoolqueue          -- Displays queued ThreadPool work items.
  threads                  -- Lists the threads in the target or sets the current thread.
  threadstate              -- Pretty prints the meaning of a threads state.
  ti                       -- Displays information about running timers.
  timerinfo                -- Displays information about running timers.
  tks                      -- Displays a Task state in a human readable format.
  token2ee                 -- Displays the MethodTable structure and MethodDesc structure for the specified token and module.
  tpq                      -- Displays queued ThreadPool work items.
  traverseheap             -- Writes out heap information to a file in a format understood by the CLR Profiler.
  verifyheap               -- Checks the GC heap for signs of corruption.
  verifyobj                -- Checks the object that is passed as an argument for signs of corruption.
  watsonbuckets            -- Displays the Watson buckets.
For more information on any command, type 'help <command-name>'.
