Good question. Here’s what those files/folders are and what to do with them.

What dbgcopilot.egg-info is for

Purpose: The .egg-info directory is packaging metadata generated by setuptools during builds or installs (name, version, dependencies, entry points, source list).
When it appears: It shows up under your source tree when you run build-related commands (or editable installs).
Do you commit it? No. It’s derived metadata and should not be tracked in source control. It belongs in your sdist/wheel artifacts, not in your repo.
What about dist and examples/crash_demo/crash

dist/: Contains built artifacts (wheel and sdist). Don’t commit.
examples/crash_demo/crash: That’s a compiled test binary you use with GDB. You can keep it untracked; ignore it so it doesn’t keep showing up in git status.
I updated .gitignore to ignore these

Packaging/build artifacts:
dist/, build/, *.egg-info/, .eggs/, *.egg, *.whl, pip-wheel-metadata/, wheelhouse/
Demo outputs:
examples/crash_demo/crash
You can now safely run builds without polluting git status:

python -m build will populate dist/ and metadata, but git will ignore them.
The crash test binary will be ignored as well.
Want me to also git restore the modified egg-info files so your working tree is clean? If yes, I’ll run:

git restore --source=HEAD -- PKG-INFO SOURCES.txt
Or simply remove the whole directory (since it’s ignored now):
rm -rf dbgcopilot.egg-info
Either way, it won’t be tracked going forward thanks to the updated .gitignore.


