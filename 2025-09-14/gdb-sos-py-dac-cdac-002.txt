is lldb plugin  in github dotnet diagnostics repo using dac or cdac?
The LLDB plugin in the dotnet/diagnostics GitHub repository primarily uses the traditional DAC approach. However, the .NET diagnostics ecosystem is in a transitional period, with efforts underway to move towards the more flexible cDAC model. 
Here's a breakdown of the current situation and the future direction:
How the current LLDB plugin uses DAC
The dotnet/diagnostics repository contains the source for the SOS (Son of Strike) debugger extension, including the LLDB plugin.
When you install this plugin (e.g., using dotnet-sos install), it configures LLDB to load the extension.
When you run an SOS command in LLDB (e.g., dumpheap), the plugin communicates with the .NET runtime's Data Access Component (DAC) to understand the managed memory layout.
This reliance on DAC requires a specific version of the libsosplugin.so file to be loaded, which must be compatible with the coreclr version you are debugging.
The traditional DAC's limitations—including being version- and architecture-specific—are a key part of the problem that cDAC is designed to solve. 
The future move towards cDAC
The dotnet runtime team has been actively working on transitioning to cDAC, which is a key part of the .NET 9 and later releases.
Discussions and work items in the dotnet/runtime repo highlight this effort, such as [cDAC] issues that involve running diagnostics pipelines on more platforms.
For now, the LLDB plugin still depends on the DAC, but the underlying runtime is gaining the ability to expose its data through the new cDAC data contract.
The end goal is that diagnostic tools like SOS will no longer need to be version-specific with the runtime and will become more portable across platforms. This will ultimately be accomplished by adapting the LLDB SOS plugin to use the new cDAC model instead of the traditional DAC. 

https://github.com/dotnet/runtime/issues/99298
ortable Data Contract-based DAC #99298

https://github.com/dotnet/runtime/issues/119212
[cDAC] Run runtime-diagnostics pipeline on more platforms #119212
